{
    "name": "coc-fsharp",
    "displayName": "F# Language Server for coc.nvim",
    "description": "F# Language Support using FSAC",
    "author": "Yatao Li",
    "license": "MIT",
    "icon": "Icon512.png",
    "version": "0.2.7",
    "publisher": "yatli",
    "repository": {
        "type": "git",
        "url": "https://github.com/yatli/fsharp-language-server"
    },
    "engines": {
        "coc": ">=0.0.71"
    },
    "keywords": [
        "fsharp",
        "coc.nvim",
        "dotnet",
        ".NET Core",
        ".NET"
    ],
    "categories": [
        "Programming Languages",
        "Linters",
        "coc.nvim"
    ],
    "activationEvents": [
        "onLanguage:fsharp"
    ],
    "main": "out/client/extension.js",
    "files": [
        "out",
        "syntaxes"
    ],
    "contributes": {
        "languages": [
            {
                "id": "fsharp",
                "aliases": [
                    "F#",
                    "FSharp",
                    "fsharp"
                ],
                "extensions": [
                    ".fs",
                    ".fsx",
                    ".fsi",
                    ".fsl",
                    ".fsy"
                ],
                "configuration": "syntaxes/fsharp.configuration.json"
            }
        ],
        "grammars": [
            {
                "language": "fsharp",
                "scopeName": "source.fsharp",
                "path": "syntaxes/fsharp.json"
            },
            {
                "language": "fsharp",
                "scopeName": "source.fsharp.fsx",
                "path": "syntaxes/fsharp.fsx.json"
            },
            {
                "language": "fsharp",
                "scopeName": "source.fsharp.fsi",
                "path": "syntaxes/fsharp.fsi.json"
            }
        ],
        "configuration": {
            "type": "object",
            "title": "FSharp configuration",
            "properties": {
                "FSharp.server.trace": {
                    "scope": "application",
                    "type": "boolean",
                    "default": false,
                    "description": "Enables verbose log tracing."
                },
                "FSharp.keywordsAutocomplete": {
                    "scope": "application",
                    "type": "boolean",
                    "default": true,
                    "description": "provides keywords in autocomplete list"
                },
                "FSharp.ExternalAutocomplete": {
                    "scope": "application",
                    "type": "boolean",
                    "default": false,
                    "description": "provides autocomplete for symbols from not opened namespaces/modules, insert open on accept, recommended default value: false"
                },
                "FSharp.Linter": {
                    "scope": "application",
                    "type": "boolean",
                    "default": true,
                    "description": "enables FSharpLint integration, provides additional warnings and code action fixes, recommended default value: true"
                },
                "FSharp.UnionCaseStubGeneration": {
                    "scope": "application",
                    "type": "boolean",
                    "default": true,
                    "description": "enables code action to generate pattern matching cases, recommended default value: true"
                },
                "FSharp.UnionCaseStubGenerationBody": {
                    "scope": "application",
                    "type": "string",
                    "default": "failwith \"Not Implemented\"",
                    "description": "defines dummy body used by pattern matching generator, recommended default value: \"failwith \\\"Not Implemented\\\"\""
                },
                "FSharp.RecordStubGeneration": {
                    "scope": "application",
                    "type": "boolean",
                    "default": true,
                    "description": "enables code action to generate record stub, recommended default value: true"
                },
                "FSharp.RecordStubGenerationBody": {
                    "scope": "application",
                    "type": "string",
                    "default": "failwith \"Not Implemented\"",
                    "description": "defines dummy body used by record stub generator, recommended default value: \"failwith \\\"Not Implemented\\\"\""
                },
                "FSharp.InterfaceStubGeneration": {
                    "scope": "application",
                    "type": "boolean",
                    "default": true,
                    "description": "enables code action to generate interface stub, recommended default value: true"
                },
                "FSharp.InterfaceStubGenerationObjectIdentifier": {
                    "scope": "application",
                    "type": "string",
                    "default": "this",
                    "description": "defines object identifier used by interface stub generator,recommended default value: \"this\""
                },
                "FSharp.InterfaceStubGenerationMethodBody": {
                    "scope": "application",
                    "type": "string",
                    "default": "failwith \"Not Implemented\"",
                    "description": "defines dummy body used by interface stub generator, recommended default value: \"failwith \\\"Not Implemented\\\"\""
                },
                "FSharp.UnusedOpensAnalyzer": {
                    "scope": "application",
                    "type": "boolean",
                    "default": true,
                    "description": "enables unused open detections, recommended default value: true"
                },
                "FSharp.UnusedDeclarationsAnalyzer": {
                    "scope": "application",
                    "type": "boolean",
                    "default": true,
                    "description": "enables unused symbol detection, recommended default value: true"
                },
                "FSharp.UseSdkScripts": {
                    "scope": "application",
                    "type": "boolean",
                    "default": true,
                    "description": "enables the use of .Net Core SDKs for script file type-checking and evaluation, otherwise the .Net Framework reference lists will be used. Recommended default value: true."
                },
                "FSharp.SimplifyNameAnalyzer": {
                    "scope": "application",
                    "type": "boolean",
                    "default": false,
                    "description": "enables simplify name analyzer and remove redundant qualifier quick fix, recommended default value: false"
                },
                "FSharp.ResolveNamespaces": {
                    "scope": "application",
                    "type": "boolean",
                    "default": true,
                    "description": "enables resolve namespace quick fix (add open if symbol is from not yet opened module/namespace), recommended default value: true"
                },
                "FSharp.EnableReferenceCodeLens": {
                    "scope": "application",
                    "type": "boolean",
                    "default": true,
                    "description": "enables reference count code lenses, recommended default value: true if --background-service-enabled is used by default, false otherwise"
                },
                "FSharp.fsiExtraParameters": {
                    "scope": "application",
                    "type": "array",
                    "default": [],
                    "description": "an array of additional runtime arguments that are passed to FSI. These are used when typechecking scripts to ensure that typechecking has the same context as your FSI instances. An example would be to set the following parameters to enable Preview features (like opening static classes) for typechecking."
                }
            }
        },
        "rootPatterns": [
            {
                "filetype": "fsharp",
                "patterns": [
                    "*.fsproj",
                    "*.sln",
                    "*.fsx",
                    "projects.assets.json",
                    ".vim",
                    ".git",
                    ".hg"
                ]
            }
        ]
    },
    "scripts": {
        "compile": "tsc -p ./",
        "watch": "tsc -watch -p ./"
    },
    "extensionDependencies": [],
    "dependencies": {
        "coc-utils": "0.0.16",
        "vscode-jsonrpc": ">=4.0.0",
        "vscode-languageserver-protocol": ">=3.14.0"
    },
    "devDependencies": {
        "@types/node": "^10.3.3",
        "@types/follow-redirects": "^1.8.0",
        "typescript": "^3.0.3",
        "coc.nvim": ">=0.0.71"
    }
}
